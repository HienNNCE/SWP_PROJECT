[1mdiff --git a/HuongDanLamViecVoiGitHub.txt b/HuongDanLamViecVoiGitHub.txt[m
[1mdeleted file mode 100644[m
[1mindex 61c73be..0000000[m
[1m--- a/HuongDanLamViecVoiGitHub.txt[m
[1m+++ /dev/null[m
[36m@@ -1,18 +0,0 @@[m
[31m-Y√™u c·∫ßu: T·∫£i git bash[m
[31m-B1: clone(t·ª´ l·∫ßn 2 ko c·∫ßn)[m
[31m-git clone https://github.com/HienNNCE/SWP_PROJECT.git  		# Clone repo v·ªÅ m√°y t√≠nh[m
[31m-cd SWP_Project  	# V√†o th∆∞ m·ª•c c·ªßa project[m
[31m-[m
[31m-B2: l·∫•y code m·ªõi nh·∫•t (m·ªói l·∫ßn code ph·∫£i pull v·ªÅ)[m
[31m-git checkout master      	# Chuy·ªÉn sang nh√°nh ch√≠nh[m
[31m-git pull origin master    	# C·∫≠p nh·∫≠t code m·ªõi nh·∫•t t·ª´ GitHub[m
[31m-[m
[31m-B3: L√†m vi·ªác tr√™n nh√°nh c·ªßa b·∫£n th√¢n (quan tr·ªçng, pull v·ªÅ ph·∫£i checkout tr∆∞·ªõc khi code)[m
[31m-git checkout hien       	# Chuy·ªÉn sang branch 'hien'[m
[31m-[m
[31m-B4: add code m·ªõi v√†o git local[m
[31m-git add .              		# Th√™m t·∫•t c·∫£ c√°c thay ƒë·ªïi v√†o staging (chu·∫©n b·ªã commit)[m
[31m-git commit -m "comment message"  # Commit v·ªõi m√¥ t·∫£ ƒë√£ l√†m g√¨ (VD:"add createCar method")[m
[31m-[m
[31m-B5: push code l√™n nh√°nh c·ªßa b·∫£n th√¢n[m
[31m-git push origin hien    	# Push c√°c thay ƒë·ªïi l√™n GitHub v√†o branch 'hien'[m
[1mdiff --git a/src/main/java/DAO/ServiceDAO.java b/src/main/java/DAO/ServiceDAO.java[m
[1mindex 2aca0b4..de59f9b 100644[m
[1m--- a/src/main/java/DAO/ServiceDAO.java[m
[1m+++ b/src/main/java/DAO/ServiceDAO.java[m
[36m@@ -1,108 +1,39 @@[m
[31m-package DAO;[m
[31m-[m
[31m-import DB.DBContext;[m
[31m-import Model.Service;[m
[31m-import java.math.BigDecimal;[m
[31m-import java.sql.*;[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.List;[m
[31m-[m
[31m-public class ServiceDAO extends DBContext {[m
[31m-[m
[31m-    // Method to get all services from the database[m
[31m-    public List<Service> getAllService() {[m
[31m-        List<Service> list = new ArrayList<>();[m
[31m-        String sql = "SELECT * FROM Service";[m
[31m-[m
[31m-        try (PreparedStatement ps = this.getConnection().prepareStatement(sql); ResultSet rs = ps.executeQuery()) {[m
[31m-[m
[31m-            while (rs.next()) {[m
[31m-                Service rsObj = new Service();[m
[31m-                // Set fields for each Service object[m
[31m-                rsObj.setServiceId(rs.getInt("service_id"));[m
[31m-                rsObj.setServiceName(rs.getString("service_name"));[m
[31m-                rsObj.setServiceDescription(rs.getString("service_description"));[m
[31m-                rsObj.setServicePrice(rs.getBigDecimal("service_price"));[m
[31m-                rsObj.setEstimateTime(rs.getTimestamp("estimate_time").toLocalDateTime());[m
[31m-                rsObj.setServiceImg(rs.getString("service_img"));[m
[31m-                [m
[31m-                list.add(rsObj);[m
[31m-            }[m
[31m-[m
[31m-        } catch (SQLException e) {[m
[31m-            e.printStackTrace();[m
[31m-        }[m
[31m-[m
[31m-        return list;[m
[31m-    }[m
[31m-[m
[31m-    // Method to add a new service to the database[m
[31m-    public boolean addNewService(Service service) {[m
[31m-        String sql = "INSERT INTO Service(service_name, service_description, service_price, estimate_time, service_img) VALUES (?,?,?,?,?)";[m
[31m-[m
[31m-        try (PreparedStatement ps = this.getConnection().prepareStatement(sql)) {[m
[31m-            ps.setString(1, service.getServiceName());[m
[31m-            ps.setString(2, service.getServiceDescription());[m
[31m-            ps.setBigDecimal(3, service.getServicePrice());[m
[31m-            ps.setTimestamp(4, Timestamp.valueOf(service.getEstimateTime()));[m
[31m-            ps.setString(5, service.getServiceImg());[m
[31m-[m
[31m-            // Execute update and return true if successful[m
[31m-            return ps.executeUpdate() > 0;[m
[31m-[m
[31m-        } catch (SQLException e) {[m
[31m-            e.printStackTrace();[m
[31m-        }[m
[31m-[m
[31m-        return false;[m
[31m-    }[m
[31m-[m
[31m-    // Method to get a service by its ID[m
[31m-    public Service getServiceById(int serviceId) {[m
[31m-        String sql = "SELECT * FROM Service WHERE service_id = ?";[m
[31m-[m
[31m-        try (PreparedStatement ps = this.getConnection().prepareStatement(sql)) {[m
[31m-            ps.setInt(1, serviceId);[m
[31m-            try (ResultSet rs = ps.executeQuery()) {[m
[31m-                if (rs.next()) {[m
[31m-                    Service service = new Service();[m
[31m-                    service.setServiceId(rs.getInt("service_id"));[m
[31m-                    service.setServiceName(rs.getString("service_name"));[m
[31m-                    service.setServiceDescription(rs.getString("service_description"));[m
[31m-                    service.setServicePrice(rs.getBigDecimal("service_price"));[m
[31m-                    service.setEstimateTime(rs.getTimestamp("estimate_time").toLocalDateTime());[m
[31m-                    service.setServiceImg(rs.getString("service_img"));[m
[31m-[m
[31m-                    return service;[m
[31m-                }[m
[31m-            }[m
[31m-        } catch (SQLException e) {[m
[31m-            e.printStackTrace();[m
[31m-        }[m
[31m-[m
[31m-        return null;[m
[31m-    }[m
[31m-[m
[31m-    // Method to update a service in the database[m
[31m-    public boolean updateService(Service service) {[m
[31m-        String sql = "UPDATE Service SET service_name=?, service_description=?, service_price=?, estimate_time=?, service_img=? WHERE service_id =?";[m
[31m-[m
[31m-        try (PreparedStatement ps = this.getConnection().prepareStatement(sql)) {[m
[31m-            ps.setString(1, service.getServiceName());[m
[31m-            ps.setString(2, service.getServiceDescription());[m
[31m-            ps.setBigDecimal(3, service.getServicePrice());[m
[31m-            ps.setTimestamp(4, Timestamp.valueOf(service.getEstimateTime()));[m
[31m-            ps.setString(5, service.getServiceImg());[m
[31m-            ps.setInt(6, service.getServiceId());[m
[31m-[m
[31m-            // Execute update and return true if successful[m
[31m-            return ps.executeUpdate() > 0;[m
[31m-        } catch (SQLException e) {[m
[31m-            e.printStackTrace();[m
[31m-        }[m
[31m-[m
[31m-        return false;[m
[31m-    }[m
[31m-[m
[31m-   [m
[31m-}[m
[32m+[m[32m/*[m
[32m+[m[32m * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license[m
[32m+[m[32m * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template[m
[32m+[m[32m */[m
[32m+[m[32mpackage DAO;[m
[32m+[m
[32m+[m[32mimport DB.DBContext;[m
[32m+[m[32mimport Model.Service;[m
[32m+[m[32mimport java.sql.PreparedStatement;[m
[32m+[m[32mimport java.sql.ResultSet;[m
[32m+[m[32mimport java.sql.SQLException;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author thien[m
[32m+[m[32m */[m
[32m+[m[32mpublic class ServiceDAO extends DBContext {[m
[32m+[m
[32m+[m[32m    public List<Service> getAllRepairService() {[m
[32m+[m[32m        List<Service> list = new ArrayList<>();[m
[32m+[m[32m        String sql = "SELECT * FROM RepairService";[m
[32m+[m
[32m+[m[32m        try (PreparedStatement ps = this.getConnection().prepareStatement(sql); ResultSet rs = ps.executeQuery()) {[m
[32m+[m
[32m+[m[32m            while (rs.next()) {[m
[32m+[m[32m                Service rsObj = new Service();[m
[32m+[m[32m                // set fields...[m
[32m+[m[32m                list.add(rsObj);[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m        } catch (SQLException e) {[m
[32m+[m[32m            e.